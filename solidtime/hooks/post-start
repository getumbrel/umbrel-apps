#!/usr/bin/env bash
set -euo pipefail

# Create admin user for solidtime

APP_DIR="$(readlink -f "$(dirname "${BASH_SOURCE[0]}")/..")"
KEYS_FILE="$APP_DIR/keys.env"

MAX_RETRIES=20    # 1 minute total (5s × 12)
RETRY_COUNT=0

ADMIN_NAME="Umbrel"
ADMIN_EMAIL="umbrel@umbrel.local"

echo "Creating admin user for solidtime..."

while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
  if OUTPUT=$(docker exec -i solidtime_scheduler_1 bash -c \
       "echo '${APP_PASSWORD}' | php artisan admin:user:create \
          '${ADMIN_NAME}' '${ADMIN_EMAIL}' \
          --ask-for-password --verify-email" 2>&1); then
    echo "Solidtime admin user created successfully."
    break
  else
    if echo "$OUTPUT" | grep -q "User with email \"${ADMIN_EMAIL}\" already exists."; then
      echo "Solidtime admin user ${ADMIN_EMAIL} already exists"
      break
    fi

    RETRY_COUNT=$((RETRY_COUNT + 1))
    echo "Attempt $RETRY_COUNT/$MAX_RETRIES failed; Solidtime scheduler container may not be ready."
    echo "  → Output: $OUTPUT"
    sleep 5
  fi

done

if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
    echo "Failed to create solidtime admin user after $MAX_RETRIES attempts."
    exit 1
fi

# Create API client for solidtime

# Check if API credentials already exist and are non-empty
if [ -f "${KEYS_FILE}" ]; then
    CLIENT_ID_EXISTS=$(grep -q "^PASSPORT_PERSONAL_ACCESS_CLIENT_ID=.*[^[:space:]]" "${KEYS_FILE}" && echo true || echo false)
    CLIENT_SECRET_EXISTS=$(grep -q "^PASSPORT_PERSONAL_ACCESS_CLIENT_SECRET=.*[^[:space:]]" "${KEYS_FILE}" && echo true || echo false)
else
    CLIENT_ID_EXISTS=false
    CLIENT_SECRET_EXISTS=false
fi

if [ "$CLIENT_ID_EXISTS" = false ] || [ "$CLIENT_SECRET_EXISTS" = false ]; then
  echo "Creating API client for solidtime..."
  RETRY_COUNT=0

  while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
      if API_KEYS=$("${UMBREL_ROOT}/scripts/app" compose "${APP_ID}" run --rm app php artisan passport:client --personal --name="API" 2>&1); then
          # Extract Client ID and secret
          CLIENT_ID=$(echo "$API_KEYS" | grep "Client ID" | awk '{print $NF}')
          CLIENT_SECRET=$(echo "$API_KEYS" | grep "Client secret" | awk '{print $NF}')

          # Add the passport credentials to the keys file
          if [ -n "$CLIENT_ID" ] && [ -n "$CLIENT_SECRET" ]; then              
              echo "PASSPORT_PERSONAL_ACCESS_CLIENT_ID=${CLIENT_ID}" >> "${KEYS_FILE}"
              echo "PASSPORT_PERSONAL_ACCESS_CLIENT_SECRET=${CLIENT_SECRET}" >> "${KEYS_FILE}"
              
              echo "Solidtime API client credentials created successfully."

              echo "Restarting solidtime app to apply changes..."
              "${UMBREL_ROOT}/scripts/app" restart "${APP_ID}" &
              break
          else
              echo "Error: Could not extract solidtime client credentials from command output."
              echo "Raw output was:"
              echo "$API_KEYS"
              RETRY_COUNT=$((RETRY_COUNT + 1))
              echo "Attempt $RETRY_COUNT/$MAX_RETRIES failed; solidtime client credentials extraction failed."
              sleep 5
          fi
      else
          RETRY_COUNT=$((RETRY_COUNT + 1))
          echo "Attempt $RETRY_COUNT/$MAX_RETRIES failed; solidtime API client creation command failed."
          echo "  → Output: $API_KEYS"
          sleep 5
      fi
  done

  if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
      echo "Failed to create solidtime API client after $MAX_RETRIES attempts."
      exit 1
  fi
else
  echo "Solidtime API client credentials already exist in ${KEYS_FILE}. No action needed."
fi

exit 0
