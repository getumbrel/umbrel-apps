[INFORMATION]
# AGPLv3 license requires that you make any source code modifications
# available to the end users of the server.
# LICENSE: https://github.com/simplex-chat/simplexmq/blob/stable/LICENSE
# Include correct source code URI in case the server source code is modified in any way.
# If any other information fields are present, source code property also MUST be present.

source_code: https://github.com/simplex-chat/simplexmq

# Declaring all below information is optional, any of these fields can be omitted.

# Server usage conditions and amendments.
# It is recommended to use standard conditions with any amendments in a separate document.
# usage_conditions: https://github.com/simplex-chat/simplex-chat/blob/stable/PRIVACY.md
# condition_amendments: link

# Server location and operator.
# server_country: ISO-3166 2-letter code
# operator: entity (organization or person name)
# operator_country: ISO-3166 2-letter code
 website: ${SMP_ADDR}

# Administrative contacts.
# admin_simplex: SimpleX address
# admin_email:
# admin_pgp:
# admin_pgp_fingerprint:

# Contacts for complaints and feedback.
# complaints_simplex: SimpleX address
# complaints_email:
# complaints_pgp:
# complaints_pgp_fingerprint:

# Hosting provider.
hosting: ${XFTP_ADDR}
# hosting_country: ISO-3166 2-letter code

# Hosting type can be `virtual`, `dedicated`, `colocation`, `owned`
hosting_type: owned

[STORE_LOG]
# The server uses STM memory for persistence,
# that will be lost on restart (e.g., as with redis).
# This option enables saving memory to append only log,
# and restoring it when the server is started.
# Log is compacted on start (deleted objects are removed).
enable: on

# Message storage mode: `memory` or `journal`.
store_messages: memory

# When store_messages is `memory`, undelivered messages are optionally saved and restored
# when the server restarts, they are preserved in the .bak file until the next restart.
restore_messages: on

# Messages and notifications expiration periods.
expire_messages_days: 21
expire_messages_on_start: on
expire_ntfs_hours: 24

# Log daily server statistics to CSV file
log_stats: off

[AUTH]
# Set new_queues option to off to completely prohibit creating new messaging queues.
# This can be useful when you want to decommission the server, but not all connections are switched yet.
new_queues: on

# Use create_password option to enable basic auth to create new messaging queues.
# The password should be used as part of server address in client configuration:
# smp://fingerprint:password@host1,host2
# The password will not be shared with the connecting contacts, you must share it only
# with the users who you want to allow creating messaging queues on your server.
create_password: ${APP_PASSWORD}

# control_port_admin_password:
# control_port_user_password:

[TRANSPORT]
# Host is only used to print server address on start.
# You can specify multiple server ports.
host: ${DEVICE_HOSTNAME}
port: 5223,443
log_tls_errors: off

# Use `websockets: 443` to run websockets server in addition to plain TLS.
# This option is deprecated and should be used for testing only.
# , port 443 should be specified in port above
websockets: off
# control_port: 5224

[PROXY]
# Network configuration for SMP proxy client.
# `host_mode` can be 'public' (default) or 'onion'.
# It defines prefferred hostname for destination servers with multiple hostnames.
# host_mode: public
# required_host_mode: off

# The domain suffixes of the relays you operate (space-separated) to count as separate proxy statistics.
# own_server_domains:

# SOCKS proxy port for forwarding messages to destination servers.
# You may need a separate instance of SOCKS proxy for incoming single-hop requests.
# socks_proxy: localhost:9050

# `socks_mode` can be 'onion' for SOCKS proxy to be used for .onion destination hosts only (default)
# or 'always' to be used for all destination hosts (can be used if it is an .onion server).
# socks_mode: onion

# Limit number of threads a client can spawn to process proxy commands in parrallel.
# client_concurrency: 32

[INACTIVE_CLIENTS]
# TTL and interval to check inactive clients
disconnect: on
ttl: 21600
check_interval: 3600

[WEB]
# Set path to generate static mini-site for server information and qr codes/links
static_path: /var/opt/simplex/www

# Run an embedded server on this port
# Onion sites can use any port and register it in the hidden service config.
# Running on a port 80 may require setting process capabilities.
http: 8000

# You can run an embedded TLS web server too if you provide port and cert and key files.
# Not required for running relay on onion address.
# https: 443
# cert: /etc/opt/simplex/web.crt
# key: /etc/opt/simplex/web.key