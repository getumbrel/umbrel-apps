version: "3.7"

services:
  app_proxy:
    environment:
      APP_HOST: mattermost_app_1
      APP_PORT: 8000
      PROXY_AUTH_ADD: "false"
  
  app:
    image: alexlack/mattermost-app:v10.6.2@sha256:3d674ccfc7de10c426fe4468bc86a3593308df4316f58eb07919cc24d6c5bf3d
    user: "1000:1000"
    restart: on-failure
    stop_grace_period: 1m
    environment:
      MM_USERNAME: admin
      MM_PASSWORD: admin
      MM_DBNAME: mattermost
      MM_SQLSETTINGS_DATASOURCE: postgres://admin:admin@mattermost_db_1:5432/mattermost?sslmode=disable&connect_timeout=10
    volumes:
      - ${APP_DATA_DIR}/data/app/mattermost/config:/mattermost/config:rw
      - ${APP_DATA_DIR}/data/app/mattermost/data:/mattermost/data:rw
      - ${APP_DATA_DIR}/data/app/mattermost/logs:/mattermost/logs:rw
      - ${APP_DATA_DIR}/data/app/mattermost/plugins:/mattermost/plugins:rw
      - ${APP_DATA_DIR}/data/app/mattermost/client-plugins:/mattermost/client/plugins:rw
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8443:8443/tcp" # WebRTC over tcp
      - "8443:8443/udp" # WebRTC over udp
    depends_on:
      db:
        condition: service_healthy

  db:
    image: alexlack/mattermost-db:v10.6.2@sha256:dabe2284d2186072eccf87ccba96462452143cc6eb4f9080c9f9dd8ad234c23f
    user: "1000:1000"
    restart: on-failure
    stop_grace_period: 1m
    environment:
      MM_USERNAME: admin
      MM_PASSWORD: admin
      MM_DBNAME: mattermost
    volumes:
      - ${APP_DATA_DIR}/data/db:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
